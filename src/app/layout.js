import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import StoryBlokProvider from "@/components/StoryBlokProvider";
import { getStoryblokApi, components } from "@/lib/storyblok";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {

  const storyblokApi = getStoryblokApi();
  let global = null;
  let HeaderComponent = null;
  let FooterComponent = null;

    try {
    const { data } = await storyblokApi.get("cdn/stories/globalconfig", {
      version: process.env.NODE_ENV === "development" ? "draft" : "published",
    });

    global = data?.story?.content || null;
    HeaderComponent = global?.header?.[0]
      ? components[global.header[0].component]
      : null;
    FooterComponent = global?.footer?.[0] 
      ? components[global.footer[0].component] : null;

  } catch (err) {
    console.warn("Kunde inte h√§mta GlobalConfig:", err.message);
  }

  return (
    <StoryBlokProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >{HeaderComponent && <HeaderComponent blok={global.header[0]} />}
          {children}
          {FooterComponent && <FooterComponent blok={global.footer[0]} />}
        </body>
      </html>
    </StoryBlokProvider>
  );
}
